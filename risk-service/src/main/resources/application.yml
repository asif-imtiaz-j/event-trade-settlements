server:
  port: ${PORT:8082}

spring:
  application:
    name: risk-service
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/risk}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 5
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    properties:
      security.protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
      sasl.mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
      sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME:}' password='${KAFKA_PASSWORD:}';}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:risk-service}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      probes:
        enabled: true

app:
  topics:
    orders: ${APP_TOPICS_ORDERS:orders}